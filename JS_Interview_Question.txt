------------------Theoretical Questions-------------------------------
Q1:   What is the object type?   (Entry) 
Q2:   Explain arrays in JavaScript   (Entry) 
Q3:   What is typeof operator?   (Entry) 
Q4:   Explain equality in JavaScript   (Entry) 
Q5:   What is Scope in JavaScript?   (Entry) 
Q6:   Explain what is Linear (Sequential) Search and when may we use one? JSPY Related To: Searching, Python  (Junior) 
Q7:   Explain Values and Types in JavaScript    (Junior) 
Q8:   What is let keyword in JavaScript?    (Junior) 
Q9:   Explain what is Binary Search JSJavaPY Related To: Searching, Java  (Junior)
Q10:   Explain the same-origin policy with regards to JavaScript.    (Junior)
Q11:   What is the difference between == and ===?    (Junior)
Q12:   Is there anyway to force using strict mode in Node.js?    (Junior)
Q13:   Why would you use something like the load event? Does this event have disadvantages? Do you know any alternatives, and why would you use those?    (Junior)
Q14:   What is strict mode?    (Junior)
Q15:   What's the difference between Host objects and Native objects?    (Junior)
Q16:   What language constructions do you use for iterating over object properties and array items?    (Junior)
Q17:   What are some of the advantages/disadvantages of writing JavaScript code in a language that compiles to JavaScript?    (Junior)
Q18:   Explain event bubbling and how one may prevent it    (Junior)
Q19:   What does use strict do?    (Junior)
Q20:   Why is it, in general, a good idea to leave the global scope of a website as-is and never touch it?    (Junior)
Q21:   What is a Polyfill?    (Junior)
Q22:   Explain Null and Undefined in JavaScript    (Junior)
Q23:   What's the difference between throw Error('msg') vs throw new Error('msg')?    (Junior)
Q24:   What is Callback Hell and what is the main cause of it?  Related To: Node.js  (Junior)
Q25:   Explain what is Interpolation Search JSPY Related To: Searching, Python  (Mid)
Q26:   What is IIFEs (Immediately Invoked Function Expressions)?    (Mid)
Q27:   What is Coercion in JavaScript?    (Mid)
Q28:   What is the difference between a shim and a polyfill?    (Mid)
Q29:   What is a Jump (or Block) Search? JSJavaPY Related To: Searching, Python  (Mid)
Q30:   What is the definition of a Higher-Order Function?    (Mid)
Q31:   What do you think of AMD vs CommonJS?    (Mid)
Q32:   Explain the differences on the usage of foo between function foo() {} and var foo = function() {}    (Mid)
Q33:   What is the drawback of creating true private in JavaScript?    (Mid)
Q34:   What's the difference between .call and .apply?    (Mid)
Q35:   What is the preferred syntax for defining enums in JavaScript?    (Mid)
Q36:   Describe Closure concept in JavaScript as best as you could    (Mid)
Q37:   Could you explain the difference between ES5 and ES6    (Mid)
Q38:   When should we use generators in ES6?    (Mid)
Q39:   Explain Function.prototype.bind.    (Mid)
Q40:   What are the benefits of using spread syntax in ES6 and how is it different from rest syntax?    (Mid)
Q41:   When should I use Arrow Functions in ES6?    (Mid)
Q42:   Explain the difference between undefined and not defined in JavaScript    (Mid)
Q43:   What are the advantages and disadvantages of using use strict?    (Mid)
Q44:   What is Currying?    (Mid)
Q45:   What are the differences between ES6 class and ES5 function constructors?    (Mid)
Q46:   Why should we use ES6 classes?    (Mid)
Q47:   Explain the difference between Object.freeze() vs const    (Mid)
Q48:   How to compare two objects in JavaScript?    (Mid)
Q49:   What will be the output of the following code?    (Mid)
Q50:   What is a closure, and how/why would you use one?    (Mid)
Q51:   What will be the output of the following code?    (Mid)
Q52:   What's a typical use case for anonymous functions?    (Mid)
Q53:   Suggest one simple way of removing duplicates from an array using ES6    (Mid)
Q54:   What is generator in JS?    (Mid)
Q55:   What is the difference between document load event and document DOMContentLoaded event?    (Mid)
Q56:   What's the difference between using let and var to declare a variable in ES6?    (Mid)
Q57:   What is the motivation for bringing Symbol to ES6?    (Mid)
Q58:   Why is extending built-in JavaScript objects not a good idea?    (Mid)
Q59:   What advantages are using arrow functions?    (Mid)
Q60:   What is the difference between Anonymous and Named functions?     (Mid)
Q61:   What is export default in JavaScript?  Related To: Node.js  (Mid)
Q62:   What is the new keyword in JavaScript?  (Senior)
Q63:   Explain Prototype Inheritance in JavaScript?  (Senior)
Q64:   What does the term Transpiling stand for?  (Senior)
Q65:   Can you give an example for destructuring an object or an array in ES6?  (Senior)
Q66:   Explain the Prototype Design Pattern  (Senior)
Q67:   Describe the JS module design pattern  (Senior)
Q68:   Can you describe the main difference between a .forEach loop and a .map() loop and why you would pick one versus the other?  (Senior)
Q69:   Explain what is Hoisting in Javascript  (Senior)
Q70:   How can you share code between files?  (Senior)
Q71:   What are the actual uses of ES6 WeakMap?  (Senior)
Q72:   Explain difference between: function Person(){}, var person = Person(), and var person = new Person()?  (Senior)
Q73:   Check if a given string is a isomorphic  (Senior)
Q74:   What is Hoisting in JavaScript?  (Senior)
Q75:   When should you NOT use arrow functions in ES6? Name three or more cases.  (Senior)
Q76:   What's the difference between a variable that is: null, undefined or undeclared? How would you go about checking for any of these states?  (Senior)
Q77:   What is the Temporal Dead Zone in ES6?  (Senior)
Q78:   Explain how JSONP works (and how it's not really Ajax)  (Senior)
Q79:   Could you compare usage of Module Pattern vs Constructor/Prototype pattern?  (Senior)
Q80:   What tools can be used to assure consistent code style?  (Senior)
Q81:   Does JavaScript have a map function to iterate over an object properties?  Related To: Node.js (Senior)
Q82:   When would you use import * as X from 'X' ?  Related To: Node.js (Senior)
Q83:   How would you prevent Callback Hell without using promises, async or generators?  Related To: Node.js (Senior)
Q84:   What's the difference between ES6 Map and WeakMap? (Expert)
Q85:   What is the difference between the await keyword and the yield keyword?  (Expert)
Q86:   Compare Async/Await and Generators usage to achive same functionality (Expert)
Q87:   How to deep-freeze object in JavaScript? (Expert)
Q88:   Is it possible to reset an ECMAScript 6 generator to its initial state? (Expert)
Q89:   Is JavaScript a pass-by-reference or pass-by-value language? (Expert)
Q90:   In JavaScript, why is the this operator inconsistent? (Expert)
Q91:   Can you give an example of a curry function and why this syntax offers an advantage? (Expert)
Q92:   Does JavaScript pass by references or pass by values?  Related To: Node.js (Expert)


----------------coding challenge-------------


Q1:   Explain how Bubble Sort works JSPY Related To: Sorting(Entry)
Q2:   Lucky sevens  (Entry)
Q3:   Simple clock angle  (Entry)
Q4:   Sum of several arrays  (Entry)
Q5:   Test divisors of three  (Entry)
Q6:   Oddball sum  (Entry)
Q7:   Sum of Array Plus One  (Entry)
Q8:   String Rotation  (Entry)
Q9:   Implement a Queue using two Stacks CSJSJavaPY Related To: Queues, Stacks, Java, C# (Junior)
Q10:   Return the N-th value of the Fibonacci sequence Recursively JSJavaPY Related To: Fibonacci Series, Data Structures, Java (Junior)
Q11:   Return the N-th value of the Fibonacci sequence. Solve in O(n) time JSJavaPY Related To: Fibonacci Series, Data Structures, Python (Junior)
Q12:   Explain how Insertion Sort works JSJavaPY Related To: Sorting, Python (Junior)
Q13:   Make this work   (Junior)
Q14:   Given a string, reverse each word in the sentence   (Junior)
Q15:   Implement enqueue and dequeue using only two stacks   (Junior)
Q16:   Write a "mul" function which will properly when invoked as below syntax   (Junior)
Q17:   Explain what a callback function is and provide a simple example   (Junior)
Q18:   How to empty an array in JavaScript?   (Junior)
Q19:   Find the missing number in O(n) time   (Junior)
Q20:   Write a function that would allow you to do this?   (Junior)
Q21:   Remove duplicates of an array and return an array of only unique elements   (Junior)
Q22:   How to check if an object is an array or not? Provide some code.   (Junior)
Q23:   How would you check if a number is an integer?   (Junior)
Q24:   Two sum problem   (Junior)
Q25:   Determine overlapping numbers in ranges   (Junior)
Q26:   Stock maximum profit   (Junior)
Q27:   Tree Level Order Print   (Junior)
Q28:   Step-by-step solution for step counting using recursion   (Junior)
Q29:   Implement Bubble Sort   (Junior)
Q30:   Get the N-th Fibonacci number with O(n) time and O(1) space complexity JSPY Related To: Fibonacci Series (Mid)
Q31:   Explain how Merge Sort works JSPY Related To: Divide & Conquer, Sorting (Mid)
Q32:   Explain how Heap Sort works JSPY Related To: Heaps and Maps, Sorting, Data Structures (Mid)
Q33:   LIS: Find length of the longest increasing subsequence (LIS) in the array. Solve using DP. JSJavaPY Related To: Dynamic Programming, Data Structures, Python (Mid)
Q34:   How to merge two sorted Arrays into a Sorted Array? JSJavaPY Related To: Arrays, Data Structures, Java, Python (Mid)
Q35:   Provide some examples of non-bulean value coercion to a boolean one   (Mid)
Q36:   Write a program for Recursive Binary Search JSJavaPY Related To: Searching, Java, Python (Mid)
Q37:   Find all the Permutations of a String JSJavaPY Related To: Backtracking, Strings, Data Structures, Java, Python (Mid)
Q38:   Check if parentheses are balanced using Stack JSJavaPY Related To: Stacks, Java, Python (Mid)
Q39:   Given an array of integers, find the largest difference between two elements such that the element of lesser value must come before the greater element   (Mid)
Q40:   What will the following code output?   (Mid)
Q41:   Write a function that would allow you to do this   (Mid)
Q42:   Given an array of integers, find the largest product yielded from three of the integers   (Mid)
Q43:   What will be the output of the following code?   (Mid)
Q44:   Check if a given string is a palindrome. Case sensitivity should be taken into account.   (Mid)
Q45:   Find the intersection of two arrays   (Mid)
Q46:   Write a recursive function that returns the binary string of a given decimal number   (Mid)
Q47:   How would you use a closure to create a private counter?   (Mid)
Q48:   FizzBuzz Challenge   (Mid)
Q49:   Given two strings, return true if they are anagrams of one another   (Mid)
Q50:   All Permutations (Anagrams) of a String   (Mid)
Q51:   Find all string combinations consisting only of 0, 1 and ?   (Mid)
Q52:   Generate all balanced bracket combinations   (Mid)
Q53:   Implement a queue using two stacks   (Mid)
Q54:   Throttle Function Implementation   (Mid)
Q55:   Find Word Positions in Text   (Mid)
Q56:   Merge two sorted linked lists   (Mid)
Q57:   Dutch national flag sorting problem   (Mid)
Q58:   Insert an interval into a list of sorted disjoint intervals   (Mid)
Q59:   Implement a queue using a linked list   (Mid)
Q60:   Quickly calculate the cube root of 6 digit numbers   (Mid)
Q61:   Implement pow(a,b) without multiplication or division   (Mid)
Q62:   How would you read files in sequence in Node.js? Provide a code example  Related To: Node.js (Mid)
Q63:   Fix this code. Explain the fix.  Related To: Node.js (Mid)
Q64:   How to use Memoization for N-th Fibonacci number?  JSJava Related To: Dynamic Programming, Fibonacci Series, Recursion (Senior)
Q65:   How to recursively reverse a Linked List? JSJavaPY Related To: Linked Lists, Recursion (Senior)
Q66:   Explain how Radix Sort works JSPY Related To: Sorting, Python (Senior)
Q67:   Binet's formula: How to calculate Fibonacci numbers without Recursion or Iteration?  CSJSJavaPY Related To: Fibonacci Series, Data Structures, C# (Senior)
Q68:   Explain how QuickSort works JSPY Related To: Divide & Conquer, Sorting, Data Structures (Senior)
Q69:   Calculate n-th Fibonacci number using Tail Recursion JSJava Related To: Fibonacci Series (Senior)
Q70:   Explain what is Fibonacci Search technique? CSJSJavaPY Related To: Divide & Conquer, Fibonacci Series, Searching, Data Structures, C# (Senior)
Q71:   Explain when and how to use Exponential (aka Doubling or Galloping) Search?  JSPY Related To: Searching (Senior)
Q72:   Write a recursive function that performs a binary search   (Senior)
Q73:   When would you use the bind function?   (Senior)
Q74:   Create a function that will evaluate if a given expression has balanced parentheses using stacks   (Senior)
Q75:   How would you create a private variable in JavaScript?   (Senior)
Q76:   How would you add your own method to the Array object so the following code would work?   (Senior)
Q77:   How does the this keyword work? Provide some code examples   (Senior)
Q78:   What will be the output of the following code?   (Senior)
Q79:   Given an integer, determine if it is a power of 2. If so, return that number, else return -1   (Senior)
Q80:   What will the following code output?   (Senior)
Q81:   What will be the output of the following code?   (Senior)
Q82:   Explain why the following doesn't work as an IIFE. What needs to be changed to properly make it an IIFE?   (Senior)
Q83:   What is Closure in JavaScript? Provide an example   (Senior)
Q84:   Transform Word   (Senior)
Q85:   Generating Fibonacci Sequence using ES6 generator functions JS Related To: Fibonacci Series (Expert)
Q86:   Copy a Linked List with Random (Arbitrary) Pointer using O(1) Space JSJavaPY Related To: Linked Lists (Expert)
Q87:   Describe the Revealing Module Pattern design pattern  
  Add to PDF   Expert